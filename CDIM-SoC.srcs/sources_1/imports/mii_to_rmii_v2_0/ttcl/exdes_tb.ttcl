<: set ComponentName [getComponentNameString] :>
<: setOutputDirectory [ttcl_string_concat $ComponentName "/example_design"] :>
<: setFileName [ttcl_string_concat $ComponentName "_exdes_tb"] :>
<: set wd [ file dirname [ get_property xml_file_name [ current_ipbom ] ] ] :>
<: setFileExtension ".vhd" :>
-- 
-- (c) Copyright 2008 - 2013 Xilinx, Inc. All rights reserved.
-- 
-- This file contains confidential and proprietary information
-- of Xilinx, Inc. and is protected under U.S. and
-- international copyright and other intellectual property
-- laws.
-- 
-- DISCLAIMER
-- This disclaimer is not a license and does not grant any
-- rights to the materials distributed herewith. Except as
-- otherwise provided in a valid license issued to you by
-- Xilinx, and to the maximum extent permitted by applicable
-- law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
-- WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
-- AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
-- BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
-- INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
-- (2) Xilinx shall not be liable (whether in contract or tort,
-- including negligence, or under any other theory of
-- liability) for any loss or damage of any kind or nature
-- related to, arising under or in connection with these
-- materials, including for any direct, or any indirect,
-- special, incidental, or consequential loss or damage
-- (including loss of data, profits, goodwill, or any type of
-- loss or damage suffered as a result of any action brought
-- by a third party) even if such damage or loss was
-- reasonably foreseeable or Xilinx had been advised of the
-- possibility of the same.
-- 
-- CRITICAL APPLICATIONS
-- Xilinx products are not designed or intended to be fail-
-- safe, or for use in any application requiring fail-safe
-- performance, such as life-support or safety devices or
-- systems, Class III medical devices, nuclear facilities,
-- applications related to the deployment of airbags, or any
-- other applications that could lead to death, personal
-- injury, or severe property or environmental damage
-- (individually and collectively, "Critical
-- Applications"). Customer assumes the sole risk and
-- liability of any use of Xilinx products in Critical
-- Applications, subject only to applicable laws and
-- regulations governing limitations on product liability.
-- 
-- THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
-- PART OF THIS FILE AT ALL TIMES.
-- 
------------------------------------------------------------------------------
-- User entered comments
------------------------------------------------------------------------------
-- This is a self-desigined Test bench developed for MII to RMII Example Design
--
------------------------------------------------------------------------------


library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use ieee.std_logic_misc.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;


library unisim;
use unisim.vcomponents.all;
library work;

entity <=:$ComponentName:>_exdes_tb is

end entity;

architecture tb of <=: ComponentName:>_exdes_tb is
  COMPONENT <=:$ComponentName:>_exdes is
   PORT (
      clk_p       : in std_logic;
      clk_n       : in std_logic;
      reset       : in std_logic;
      atg_done    : out std_logic;
      atg_status  : out std_logic_vector(31 DOWNTO 0)
   );
  end COMPONENT;

signal local_clk_p : std_logic := '0';
signal local_clk_n : std_logic := '1';
signal local_reset : std_logic := '1';
signal local_atg_done : std_logic;
signal local_atg_status : std_logic_vector(31 downto 0);
-----
begin
-----

-----
----------------------------------------------
-- PROCESS_CLK_GEN_P: generate the clock with 100 Mhz
PROCESS_CLK_GEN_P: process
-----
begin
-----
    wait for 2.5 ns;
    local_clk_p <= not local_clk_p;
end process PROCESS_CLK_GEN_P;

------------------------------------------------------------------
----------------------------------------------
-- PROCESS_CLK_GEN_N: generate the clock with 100 Mhz
PROCESS_CLK_GEN_N: process
-----
begin
-----
    wait for 2.5 ns;
    local_clk_n <= not local_clk_n;
end process PROCESS_CLK_GEN_N;

------------------------------------------------------------------
----------------------------------------------
-- PROCESS_RST_GEN: generate the clock with 100 Mhz
PROCESS_RST_GEN: process
-----
begin
-----
    wait for 25 ns;
    local_reset <= '1';
    wait for 70 ns;
    local_reset <= '0';
    wait;
end process PROCESS_RST_GEN;

------------------------------------------------------------------
process (local_atg_done)
-----
begin
-----
        if (local_atg_done'event and local_atg_done = '1') then
          if (local_atg_status(1 downto 0) = "01") then
            report "Test Completed Successfully" severity FAILURE;
          elsif (local_atg_status(1 downto 0) = "10") then
            report "Test Failure" severity FAILURE;
          elsif (local_atg_status(1 downto 0) = "11") then
            report "Test Hanged" severity FAILURE;
          end if;
        end if;
end process;
------------------------------------------------------------------

EXDES: <=:$ComponentName:>_exdes
  port map (
       clk_p       => local_clk_p,
       clk_n       => local_clk_n,
       reset       => local_reset,
       atg_done    => local_atg_done,
       atg_status  => local_atg_status
  );

end tb;
